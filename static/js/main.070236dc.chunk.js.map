{"version":3,"sources":["components/Contact/ContactItem.module.css","components/Filter/Filter.module.css","components/Contact/ContactsFile.module.css","components/Contact/ContactItem.js","components/redux/contacts-actions.js","components/redux/contacts-operations.js","components/redux/contacts-selectors.js","components/Contact/ContactsFile.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/App.js","components/redux/contacts-reducer.js","components/redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactItem","name","number","id","onDeleteContact","className","s","item_contact","type","item_button","onClick","prototype","PropTypes","string","isRequired","func","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","dispatch","actions","get","then","data","catch","error","contact","post","contactId","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","isLoading","getError","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsFile","this","props","fetchContacts","contact_list","map","Component","connect","contactsSelectors","contactsOperations","ContactForm","loginInputNameId","uniqueId","loginInputNumberId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","some","toast","info","onSubmit","reset","item_form","label_data","htmlFor","item_input","pattern","title","required","placeholder","onChange","btn_submit","disabled","e","target","item_filter","text_filter","item_element","App","autoClose","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.070236dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_contact\":\"ContactItem_item_contact__3PSz6\",\"item_button\":\"ContactItem_item_button___hb7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_filter\":\"Filter_item_filter__2nPXh\",\"item_element\":\"Filter_item_element__2SP5A\",\"text_filter\":\"Filter_text_filter__3rV-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactsFile_contact_list__1WLT7\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactItem.module.css';\r\n\r\n\r\nconst ContactItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={s.item_contact}>\r\n    <p className={s['item-text']}>{name}:</p>\r\n    <p className={s['item-text']}>{number}</p>\r\n    <button\r\n      type=\"button\"\r\n      className={s.item_button}\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactItem.prototype = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst filterContacts = createAction('contacts/filter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  filterContacts,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import axios from 'axios';\r\nimport actions from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\nconst getLoading = state => state.contacts.isLoading;\r\nconst getError = state => state.contacts.error;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n   getContacts,\r\n   getLoading,\r\n   getError,\r\n   getFilter,\r\n   getFilteredContacts,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport ContactItem from './ContactItem';\r\nimport s from './ContactsFile.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts-operations';\r\nimport contactsSelectors from '../redux/contacts-selectors';\r\n\r\n\r\nclass ContactsFile extends Component {\r\n\r\n  static propTypes = {\r\n\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string).isRequired),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\n componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLoading && <h1>Phonebook is loading...</h1>}\r\n        <ul className={s.contact_list}>\r\n          {this.props.contacts.map(({ id, name, number }) => (\r\n   <ContactItem\r\n     key={id}\r\n     name={name}\r\n     number={number}\r\n     id={id}\r\n    onDeleteContact={this.props.onDeleteContact}\r\n    className={s.item_contact}\r\n    />\r\n  ))}\r\n      </ul>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n     contacts: contactsSelectors.getFilteredContacts(state),\r\n     isLoading: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDeleteContact: id => dispatch(contactsOperations.deleteContact(id)),\r\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsFile);","import React, { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts-operations';\r\nimport contactsSelectors from '../redux/contacts-selectors';\r\nimport { v4 as uniqueId } from 'uuid';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  loginInputNameId = uniqueId(); \r\n  loginInputNumberId = uniqueId(); \r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { contacts } = this.props;\r\n    const { name, number } = this.state;\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      toast.info(`${name} is already in contacts`);\r\n    } else {\r\n      this.props.onSubmit(name, number);\r\n    }\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.item_form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label_data} htmlFor={this.loginInputNameId}>\r\n          Name\r\n          <input\r\n            className={s.item_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n             id = {this.loginInputNameId}\r\n            placeholder=\"Annie Copeland\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={s.label_data} htmlFor={this.loginInputNumberId}>\r\n          Phone\r\n          <input\r\n            className={s.item_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n             id = {this.loginInputNumberId}\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button\r\n          className={s.btn_submit}\r\n          type=\"submit\"\r\n          disabled={name === '' || number === ''}\r\n        >\r\n          Save contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => {\r\n    return dispatch(contactsOperations.addContact(name, number));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../redux/contacts-actions';\r\nimport contactsSelectors from '../redux/contacts-selectors';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className={s.item_filter}>\r\n    <p className={s.text_filter}>Contacts search</p>\r\n    <input\r\n      className={s.item_element}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n value: contactsSelectors.getFilter(state),});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContacts(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport ContactsFile from './Contact';\r\nimport ContactForm from './ContactForm';\r\nimport Filter from './Filter';\r\nimport '../index.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n      <div className=\"Container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm/>\r\n        <h2>Contacts</h2>\r\n        <Filter/>\r\n        <ContactsFile />\r\n            <ToastContainer autoClose={3700} />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\nimport store from './components/redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item_form\":\"ContactForm_item_form__340Ot\",\"item_input\":\"ContactForm_item_input__2EU2d\",\"label_data\":\"ContactForm_label_data__2Oy0Y\",\"item_contact\":\"ContactForm_item_contact__-AyX8\",\"item_text_filter\":\"ContactForm_item_text_filter__2V15m\",\"btn_submit\":\"ContactForm_btn_submit__1unHf\"};"],"sourceRoot":""}